1:HL["/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/6c8fde2a45eb1828.css",{"as":"style"}]
0:["2VaXLSD3VJlO1X9dq0Pv2",[[["",{"children":["projects",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6c8fde2a45eb1828.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":7767,"chunks":["272:static/chunks/webpack-f72c49b478966fd8.js","971:static/chunks/fd9d1056-44fe9588d0e5e7bc.js","596:static/chunks/596-2c3d4406a166ed14.js"],"name":"default","async":false}
6:I{"id":7920,"chunks":["272:static/chunks/webpack-f72c49b478966fd8.js","971:static/chunks/fd9d1056-44fe9588d0e5e7bc.js","596:static/chunks/596-2c3d4406a166ed14.js"],"name":"default","async":false}
7:I{"id":949,"chunks":["569:static/chunks/569-a70fe566d0f7958f.js","895:static/chunks/app/projects/page-731ab092965ff5fe.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__className_20951f","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":["$","main",null,{"className":"flex flex-wrap content-start md:flex-nowrap \n                min-h-screen p-10 px-2 lg:px-24 min-w-screen \n                justify-center space-x-0 md:space-x-3 md:space-y-0 space-y-3","children":[["$","div",null,{"className":"w-screen md:w-[40%] lg:w-[512px] space-y-3","children":["$","$L7",null,{}]}],["$","div",null,{"className":"w-screen md:w-[60%] lg:w-screen bg-white border-2 border-black p-6","style":{"animation":"appear 0.5s forwards"},"children":[["$","h2",null,{"children":"404 - Page Not Found"}],["$","p",null,{"children":"Sorry, but it looks like this page was not found."}]]}]]}],"notFoundStyles":[],"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","projects","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","main",null,{"className":"flex flex-wrap content-start md:flex-nowrap \n                min-h-screen p-10 px-2 lg:px-24 min-w-screen \n                justify-center space-x-0 md:space-x-3 md:space-y-0 space-y-3","children":[["$","div",null,{"className":"w-screen md:w-[40%] lg:w-[512px] space-y-3","children":["$","$L7",null,{}]}],["$","div",null,{"className":"w-screen md:w-[60%] lg:w-screen bg-white border-2 border-black p-6","style":{"animation":"appear 0.5s forwards"},"children":[["$","h2",null,{"children":"Projects"}],["$","p",null,{"children":"A brief description of my recent projects."}],["$","ul",null,{"style":{},"children":[["$","li","ReSTIR DI",{"className":"border-b border-black","children":["$","div",null,{"className":"flex flex-row py-3 space-x-6 border-[0px] border-black items-between rounded-[10px]","children":[["$","div",null,{"className":"flex flex-col basis-1/2","children":[["$","h3",null,{"children":"ReSTIR DI"}],[["$","p",null,{"children":["Implemented an interactive ray-tracer based on ReSTIR using"," ",["$","b",null,{"children":"Rust"}]," and ",["$","b",null,{"children":"egui"}]," from scratch. I also implemented a BVH acceleration structure with surface area heuristic for faster intersection detection."]}],["$","p",null,{"children":["Reference:"," ",["$","a",null,{"href":"https://research.nvidia.com/publication/2020-07_spatiotemporal-reservoir-resampling-real-time-ray-tracing-dynamic-direct","className":"underline","children":["Nvidia","'","s ReSTIR paper"]}]]}],["$","p",null,{"children":"Interactive web demo coming soon!"}]],["$","div",null,{"className":"flex h-[100%] items-end","children":["$","span",null,{"children":[]}]}]]}],["$","div",null,{"className":"basis-1/2 rounded-[5px] bg-gray-100 min-h-[220px] border border-black","style":{"display":"flex","alignItems":"center","justifyContent":"center"},"children":["$","img",null,{"src":"/screenshot_restir.png","alt":"ReSTIR Screenshot","className":"max-h-[220px]"}]}]]}]}],["$","li","Ray Tracing in One Weekend using Metal GPU",{"className":"border-b border-black","children":["$","div",null,{"className":"flex flex-row py-3 space-x-6 border-[0px] border-black items-between rounded-[10px]","children":[["$","div",null,{"className":"flex flex-col basis-1/2","children":[["$","h3",null,{"children":"Ray Tracing in One Weekend using Metal GPU"}],[["$","p",null,{"children":["My first attempt at shader programming. I rewrote the path tracer in Ray Tracing in One Weekend using Apple","'","s Metal shaders and their C++ bindings, ",["$","b",null,{"children":"metal-cpp"}]," which netted a 60x speed-up."]}],["$","p",null,{"children":["Reference:"," ",["$","a",null,{"href":"https://raytracing.github.io/books/RayTracingInOneWeekend.html","className":"underline","children":"Ray Tracing in One Weekend"}]]}]],["$","div",null,{"className":"flex h-[100%] items-end","children":["$","span",null,{"children":[["",["$","a",null,{"className":"underline","href":"/notes/in-one-weekend-metal","children":"Notes"}]],[" | ",["$","a",null,{"className":"underline","href":"https://github.com/sean01zhang/rt-one-weekend-metal","children":"Source Code"}]]]}]}]]}],["$","div",null,{"className":"basis-1/2 rounded-[5px] bg-gray-100 min-h-[220px] border border-black","style":{"display":"flex","alignItems":"center","justifyContent":"center"},"children":["$","img",null,{"src":"/screenshot_rtoneweekend.png","alt":"Final Scene in Ray Tracing in One Weekend","className":"max-h-[220px]"}]}]]}]}],["$","li","Ray Tracing in One Weekend",{"className":"border-b border-black","children":["$","div",null,{"className":"flex flex-row py-3 space-x-6 border-[0px] border-black items-between rounded-[10px]","children":[["$","div",null,{"className":"flex flex-col basis-1/2","children":[["$","h3",null,{"children":"Ray Tracing in One Weekend"}],[["$","p",null,{"children":["From Ray Tracing in One Weekend, I made a brute force path tracer using ",["$","b",null,{"children":"C++"}],"."]}],["$","p",null,{"children":["Reference:"," ",["$","a",null,{"href":"https://raytracing.github.io/books/RayTracingInOneWeekend.html","className":"underline","children":"Ray Tracing in One Weekend"}]]}]],["$","div",null,{"className":"flex h-[100%] items-end","children":["$","span",null,{"children":[["",["$","a",null,{"className":"underline","href":"/notes/in-one-weekend","children":"Notes"}]],[" | ",["$","a",null,{"className":"underline","href":"https://github.com/sean01zhang/rt-one-weekend-no-oop","children":"Source Code"}]]]}]}]]}],["$","div",null,{"className":"basis-1/2 rounded-[5px] bg-gray-100 min-h-[220px] border border-black","style":{"display":"flex","alignItems":"center","justifyContent":"center"},"children":["$","img",null,{"src":"/screenshot_rtoneweekend.png","alt":"Final Scene in Ray Tracing in One Weekend","className":"max-h-[220px]"}]}]]}]}]]}]]}]]}],null],"segment":"__PAGE__"},"styles":[]}],"segment":"projects"},"styles":[]}]}]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Sean Zhang"}],["$","meta","2",{"name":"description","content":"Personal Website"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","5",{"name":"next-size-adjust"}]]
8:null
